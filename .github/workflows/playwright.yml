name: Playwright Tests and Report Deployment

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "playwright-report"
  cancel-in-progress: false

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env: 
      CI: 1
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js dependencies and Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            /home/runner/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        continue-on-error: true
        run: npx playwright test

      - name: List Playwright report folder contents
        if: ${{ always() }}
        run: ls -lR playwright-report || echo "playwright-report folder not found"

      - name: Prepare Playwright report for Pages
        if: ${{ always() }}
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "Deploying report to site/$BRANCH_NAME"
          rm -rf site
          if [ -d "playwright-report" ]; then
            mkdir -p "site/$BRANCH_NAME"
            cp -r playwright-report/* "site/$BRANCH_NAME/"
            echo "Copied playwright-report to site/$BRANCH_NAME"
          else
            echo "No report found; skipping site preparation."
          fi


      - name: List site folder contents
        if: ${{ github.ref == 'refs/heads/main' && always() }}
        run: ls -lR site

      - name: Upload artifact for Pages
        if: ${{ github.ref == 'refs/heads/main' && always() }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    if: ${{ github.ref == 'refs/heads/main' && always() }}
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
